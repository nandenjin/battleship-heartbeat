{
  "rules": {
    ".read": false,
    ".write": false,
    "games": {
      ".write": "auth != null",
      "$gid": {
        ".read": true,
        ".write": "auth != null && !data.exists() && newData.hasChildren(['createdBy'])",
        "createdBy": {
          ".validate": "!data.exists() && newData.val() == auth.uid"
        },
        "host": {
          ".write": "auth != null && !data.exists() && newData.hasChildren(['uid'])",
          "uid": {
            ".validate": "!data.exists() && newData.val() == auth.uid"
          },
          "board": {
            ".validate": "newData.isString() && data.parent().child('uid').val() == auth.uid"
          },
          "attack": {
            ".validate": "newData.isString() && data.parent().child('uid').val() == auth.uid"
          },
          "cursor": {
            ".validate": "newData.isNumber() && data.parent().child('uid').val() == auth.uid"
          },
          "$other": {
            ".validate": false
          }
        },
        "guest": {
          ".write": "auth != null && !data.exists() && newData.hasChildren(['uid'])",
          "uid": {
            ".validate": "!data.exists() && newData.val() == auth.uid"
          },
          "board": {
            ".validate": "newData.isString() && data.parent().child('uid').val() == auth.uid"
          },
          "attack": {
            ".validate": "newData.isString() && data.parent().child('uid').val() == auth.uid"
          },
          "cursor": {
            ".validate": "newData.isNumber() && data.parent().child('uid').val() == auth.uid"
          },
          "$other": {
            ".validate": false
          }
        },
        "$other": {
          ".validate": false
        }
      }
    }
  }
}
